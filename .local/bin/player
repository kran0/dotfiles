#!/bin/bash

# $0 - mpv wrapper
# increases range of mpv standard EXIT CODES with CUSTOM EXIT CODES
# Workflow: parce stdout line, return the code based on the text
#

DEBUG_ENABE=${DEBUG_ENABE:-false}

function trapExit {

 mpvExitCode="$(sed -ne '$s/^EXIT CODE: //p' ${@})"
 customExitCode="${mpvExitCode:-0}"

 grep -qaF '][i][cplayer] Exiting... (End of file)' ${@} && customExitCode='101'
 grep -qaF '][i][cplayer] Saving state.'            ${@} && customExitCode='102'

 [ "${DEBUG_ENABE}" '!=' 'false' ] && (
  case "${customExitCode}" in
   101 ) echo 'EXIT CODE 101: Normal exit due to end of file'       ;;
   102 ) echo 'EXIT CODE 101: Normal exit with saving state'        ;;
   0   ) echo "EXIT CODE ${customExitCode}: Standard good mpv exit code (${mpvExitCode})" ;;
   *   ) echo "EXIT CODE ${customExitCode}: Standard bad mpv exit code (${mpvExitCode})"  ;;
  esac ) >&2

 rm -f $@
 return ${customExitCode}
}

TMP_LOG="$(mktemp --suffix=-player)"
trap 'trapExit "${TMP_LOG}"; exit ${?}' EXIT

mpv --log-file="${TMP_LOG}" "${@}"
echo "EXIT CODE: ${?}" >> "${TMP_LOG}"
